[{"content":"今天终于找到自己的 Hugo 站点文件了\u0026hellip;\n没别的，就感觉快过年了该发篇博文。\n这次我在慎重考虑后对博客进行了一些大刀阔斧的改版：\n  移除了博客中的所有「分类」，各位仍可使用首页右侧的「标签云」或「标签」页面。\n  将个人博客的友情链接和各种组织和项目的链接页面合并为一个页面。\n  更新到 hugo 及 hugo-theme-stack 的最新版本。\n  在页脚添加了关于使用 Google Analytics 收集用户数据的声明\n  把本站的锅全甩给了 GitHub Pages 和 Cloudflare。\n  不过，今天还是没把评论回复的邮件通知配置好\u0026hellip;\n因为我忘了怎么整了，还得再仔细看文档\u0026hellip;\n","date":"2021-12-26T00:00:00Z","permalink":"https://ayx.moefox.tech/happynewyear2022/","title":"新年快乐 \u0026 本站的改版"},{"content":"你以前也许听说过或用过 Valine。Waline 与它差不多，但管理功能集成在内，并可以更方便地部署。\n如果你使用其他没有 Waline 支持的 Hugo 主题或其他博客系统，按本文部署后可以参考官方文档来引入客户端。\n在 LeanCloud 上部署数据库 注册 LeanCloud 国际版并进入控制台。\n如果您决定使用 LeanCloud 国内版，您需要为您创建的应用额外绑定已备案的域名。\n创建开发版新应用（随意命名）并复制设置 - 应用凭证中的前三项值，稍后会添加在 Vercel 中的环境变量里。\n在 Vercel 上部署服务端  点击按钮跳转到 Vercel.com 部署  （推荐）使用 GitHub 登录，创建存储库（可以是私有 Repo），跳过创建团队（反正这也不是什么需要团队协作的项目），部署。\n两分钟左右部署就会完成。\n完成部署后在 Settings 中找到 Environment Variables，分别添加三个环境变量 LEAN_ID、LEAN_KEY 和 LEAN_MASTER_KEY 。VALUE 分别填写在 LeanCloud 中获得的 APP ID、APP KEY、和 Master Key。\n记得注册你的管理员账号，以免被访客注册。第一个注册的用户会得到管理权限。\n在配置文件中配置客户端 最后打开站点根目录下的 config.yaml，在 params 下添加以下几行：（如果你当初拷贝了 Stack 提供的 config.yaml 文件，那么这段在第 60 行左右，只需填入 serverURL 即可）\n # Waline client configuration see: https://waline.js.org/en/reference/client.html waline: serverURL: https://\u0026lt;PUT_YOUR_OWN_HERE\u0026gt;.vercel.app/ lang: zh-CN visitor: true avatar: emoji: - https://cdn.jsdelivr.net/gh/walinejs/emojis/qq requiredMeta: - name - email - url placeholder: locale: admin: Admin 记得替换 serverURL 为你自己部署的 Vercel App 地址，在这里查阅各项参数的含义。\n快速上手 | Waline\n然后可以使用 hugo server 看下效果，使用 Waline 时不会像 disqus 一样在本地预览时屏蔽评论。\nEmoji 你可以为你的 Waline 客户端添加多套表情。\n Waline 提供了一系列开箱即用的表情预设。你可以直接将它们添加到 emoji 选项中:\nAlus\nhttps://cdn.jsdelivr.net/gh/walinejs/emojis@1.0.0/alus\n哔哩哔哩\nhttps://cdn.jsdelivr.net/gh/walinejs/emojis@1.0.0/bilibili\nQQ\nhttps://cdn.jsdelivr.net/gh/walinejs/emojis@1.0.0/qq\n贴吧\nhttps://cdn.jsdelivr.net/gh/walinejs/emojis@1.0.0/tieba\nTwitter Emoji\nhttps://cdn.jsdelivr.net/gh/walinejs/emojis@1.0.0/tw-emoji\n微博\nhttps://cdn.jsdelivr.net/gh/walinejs/emojis@1.0.0/weibo\n 评论管理  评论管理 (管理端)\n部署完成后，请访问 \u0026lt;serverURL\u0026gt;/ui/register 进行注册。首个注册的人会被设定成管理员。\n管理员登陆后，即可看到评论管理界面。在这里可以修改、标记或删除评论。\n用户也通过评论框注册账号，登陆后会跳转到自己的档案页。\n ","date":"2021-10-04T00:00:00Z","permalink":"https://ayx.moefox.tech/waline/","title":"在 Hugo 主题 Stack 中轻松配置 Waline 评论系统"},{"content":"这个错误让人懵圈的地方就在于它不会给出错误出现的位置，让已经写了几百行的你痛不欲生。\n可执行文件被占用了 因此编译器无法覆盖旧的可执行文件，所以编译失败。\n这很有可能是你没发现它还没结束运行。\n（我目前在用的 IDE：Visual Studio Code）\n扩展：C/C++ Compile Run（可以方便地编译单个 cpp 文件，且不会因为路径中存在空格或中文出错。）  \n解决方案 Dev C++ 等 IDE 直接把弹出的窗口（黑框）关了就行了\nVS Code 可以从输出切换到终端选项卡，使用快捷键 Ctrl+C 结束程序（同样适用于 external console ）。\n实在不行就用任务管理器和 taskkill 吧  \n主函数不存在（main 拼写错误） 你不太可能不写主函数，但是你很有可能把 main 打成 mian 或者什么其他奇怪的东西。\n在编译器眼里，这些可不能算主函数。\n \n解决方案 把 main 拼对。\n所调用的函数仅进行了声明 这种情况下新版编译器仍旧会输出 error: ld returned 1 exit status 这一让人迷惑的错误。   但是一般也不会把函数体和声明分开写吧\u0026hellip;\n（函数声明在主函数上方即可，函数体是可以写在 main 函数下方的。）\n解决方案 把漏写了的函数体补上。\n（旧版编译器）在主函数中定义了函数 新版编译器发现你在 main 函数中定义了其它函数报错并不是error: ld returned 1 exit status，\n而是error: a function-definition is not allowed here before '{' token  Snipaste_2021-08-22_19-30-32.png \n解决方案 把子函数定义在主函数外面。\n（旧版编译器）调用了不存在的函数 一般情况下应该是所需头文件未引入或者函数名键入错误。\n并不确定“scanf/printf 键入错误”是不是真的会引起该错误（CSDN 上的一篇博客说的，我也懒得去装个旧版编译器实测），是不是只有 scanf 和 printf 会这样更不得而知\u0026hellip;\n总之新版编译器即使在 CSDN 博文中所谓的“代码较多的情况”下也不会因为这个原因出现这种错误，只会告诉你这个函数在这个作用域没有被定义过，甚至还会反问你：\n 你说的是 scanf 吗？\n （测试用代码是随机跳题后从这里复制的，并未提交评测）  \n解决方案 检查函数名称的拼写是否正确。\n如果想调用库函数但不清楚应该引入什么头文件，可以在搜索引擎上像这样搜索：\nsqrt() 所在的头文件\nC++ sqrt()\nC语言 sqrt()\n或者直接 #include \u0026lt;bits/stdc++.h\u0026gt;\n本文的测试环境 g++ (MinGW-W64 x86_64-posix-seh, built by Brecht Sanders) 10.3.0 Copyright (C) 2020 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 编辑记录 2021-08-22 19:20:00\n","date":"2021-08-22T00:00:00Z","image":"https://ayx.moefox.tech/error-ld-returned-1-exit-status/fengmian_huc9b449ad671760edd8f09c2c6f896023_562448_120x120_fill_box_smart1_3.png","permalink":"https://ayx.moefox.tech/error-ld-returned-1-exit-status/","title":"出现 error: ld returned 1 exit status 的五种原因以及解决方法"},{"content":" MySSL 安全认证   又摸了一下午整了个这么个东西出来 要得到 A+ 评级，您的网站必须启用 HSTS 且 max-age 属性不小于 6个月（即 15768000 秒） 请注意启用 HSTS 后所有不支持 HTTPS 的子域名都将无法访问，且在 max-age 属性设置的时间内无法恢复。 要得到 ATS 合规 ，您的网站必须支持 TLS v1.2。 要得到 PCI DSS 合规，您的网站不得支持 TLS v1.0。 PCI安全标准委员会规定2018年6月30日之后，开启TLS1.0将导致PCI DSS不合规，\n具体参考：《更严格的PCI DSS合规标准》\nHSTS 相关配置可以参考 MySSL.com 的 HTTPS安全与兼容性配置指南 HTTP Strict Transport Security Header Testing Tool\n","date":"2021-08-02T00:00:00Z","image":"https://ayx.moefox.tech/ssl/cover_hu06fb3309396b2a0cbdb3a514cd6feb2b_139309_120x120_fill_box_smart1_3.png","permalink":"https://ayx.moefox.tech/ssl/","title":"MySSL 安全签章"},{"content":"题面来自洛谷，根据我的个人喜好有小修改\n题目背景 根据斯诺登事件出的一道水题\n题目描述 2013 年 X 月 X 日，俄罗斯办理了斯诺登的护照，于是他混迹于一架开往委内瑞拉的飞机。但是，这件事情太不周密了，因为 FBI 的间谍早已获悉他的具体位置——但这不是最重要的——最重要的是如果要去委内瑞拉，那么就要经过古巴，而经过古巴的路在美国的掌控之中。\n丧心病狂的奥巴马迫降斯诺登的飞机，搜查时却发现，斯诺登杳无踪迹。但是，在据说是斯诺登的座位上，发现了一张纸条。纸条由纯英文构成：Obama is a two five zero.（以 . 结束输出，只有 6 个单词+一个句号，句子开头如没有大写亦为合法）这句话虽然有点无厘头，但是警官陈珺骛发现这是一条极其重要的线索。他在斯诺登截获的一台笔记本中找到了一个 C++ 程序，输入这条句子后立马给出了相对应的密码。陈珺鹜高兴得晕了过去，身为警官的你把字条和程序带上了飞机，准备飞往曼哈顿国际机场，但是在飞机上检查的时候发现——程序被粉碎了！飞机抵达华盛顿只剩5分钟，你必须在这 5 分钟内编写（杜撰）一个程序，免受上司的 10000000000%10 大板。破译密码的步骤如下：\n（1）找出句子中所有用英文表示的数字($\\leq 20$)，列举在下：\n正规：one two three four five six seven eight nine ten eleven twelve thirteen fourteen fifteen sixteen seventeen eighteen nineteen twenty\n非正规：a both another first second third。为避免造成歧义，another 算作 $1$ 处理。\n（2）将这些数字平方后对 $100$ 取模，如 $00,05,11,19,86,99$。\n（3）把这些两位数按数位排成一行，组成一个新数，如果开头为 $0$，就去 $0$。\n（4）找出所有排列方法中最小的一个数，即为密码。\n// 数据已经修正 By absi2011 如果还有问题请联系我\n输入格式 一个含有 6 个单词的句子。\n输出格式 一个整型变量（密码）。如果没有符合要求的数字出现，则输出 0。\n输入输出样例 输入 #1\nBlack Obama is two five zero . 输出 #1\n425 分析 数据咋骂人呢\n先一个个输入单词与题目给出的 26 个单词匹配，string 类型可以直接使用逻辑运算符 == 进行判断（C++ 选手谁闲着没事用 char 数组啊）；\n由于已经知道单词数量是 $6$ 个并不需要用到 while 循环（输入字符串的情况下 cin 的返回值情况我也不清楚）\n一些问题 为什么样例输出不是 245 或者 254 ？  25和4组成的最小数不是254吗，为什么样例给的425？\n  Black Obama is two five zero .\n zero 是不算数的！ 因此我们从六个单词中只能提取出两个：two 和 five。\n转换成数字就是 $2$ 和 $5$。\n然后我们算出它们的平方。\n$2^2=4$\n$5^5=25$\n对 $100$ 取模后结果还是 $4$ 和 $25$。\n所以这个新数是 $425$。\n 把这些两位数按数位排成一行，组成一个新数\n 我感觉中间那三个字是多余的\u0026hellip;不仅不能帮助理解反而可能误导选手\n这部分我暂时也想不通怎么解释，以后再编辑吧\u0026hellip;\n只能得 20 分？ 放一下我下载的测试点#2 的数据（请勿用于打表）：\nYou are a three eight pig . 10964 我得了 20 分的程序在这个测试点上给出的答案是 1964，也就是忽略了所有 0，但实际上只能忽略开头那个。\n 如果开头为 0，就去 0。\n 记得排序。\nif(num[0]) cout\u0026lt;\u0026lt;num[0]; for(int i=1;i\u0026lt;cnt;i++){ if(num[i]\u0026gt;10) cout\u0026lt;\u0026lt;num[i]; else cout\u0026lt;\u0026lt;\u0026#39;0\u0026#39;\u0026lt;\u0026lt;num[i]; } 忘了没有任何单词匹配的情况 可能就我没看清题？\n直接输出 0 后结束程序即可。 其实不结束也啥都输出不出来，浪费点时间而已。\nif(!cnt) cout\u0026lt;\u0026lt;0,exit(0); 冷知识，虽然 return 0; 不能写在逗号后面用于结束程序（无法通过编译），但是 exit(0); 可以 完整代码 仅供学习参考使用 抄袭、复制题解，以达到刷 AC 率/AC 数量或其他目的的行为，在洛谷是严格禁止的。\n洛谷非常重视学术诚信。此类行为将会导致您成为作弊者。 具体细则请查看洛谷社区规则。\n#include\u0026lt;bits/stdc++.h\u0026gt;using namespace std; string tmp,dic[27]={\u0026#34;\u0026#34;,\u0026#34;one\u0026#34;,\u0026#34;two\u0026#34;,\u0026#34;three\u0026#34;,\u0026#34;four\u0026#34;,\u0026#34;five\u0026#34;,//并不会出现zero \u0026#34;six\u0026#34;,\u0026#34;seven\u0026#34;,\u0026#34;eight\u0026#34;,\u0026#34;nine\u0026#34;,\u0026#34;ten\u0026#34;,//但是这里我为了前20个数下标对应数值把0空着 \u0026#34;eleven\u0026#34;,\u0026#34;twelve\u0026#34;,\u0026#34;thirteen\u0026#34;,\u0026#34;fourteen\u0026#34;,\u0026#34;fifteen\u0026#34;, \u0026#34;sixteen\u0026#34;,\u0026#34;seventeen\u0026#34;,\u0026#34;eighteen\u0026#34;,\u0026#34;nineteen\u0026#34;,\u0026#34;twenty\u0026#34;, \u0026#34;a\u0026#34;,\u0026#34;both\u0026#34;,\u0026#34;another\u0026#34;,\u0026#34;first\u0026#34;,\u0026#34;second\u0026#34;,\u0026#34;third\u0026#34;}; int num[6],cnt; int main(){ for(int i=0;i\u0026lt;6;i++){ cin\u0026gt;\u0026gt;tmp; if(!i\u0026amp;\u0026amp;tmp[0]\u0026gt;=\u0026#39;A\u0026#39;\u0026amp;\u0026amp;tmp[0]\u0026lt;=\u0026#39;Z\u0026#39;) tmp[0]+=\u0026#39;a\u0026#39;-\u0026#39;A\u0026#39;; for(int j=1;j\u0026lt;=26;j++){ if(tmp==dic[j]){ if(j\u0026lt;=20){\t//在下标1-20匹配即对应1-20  num[cnt++]=j; break; } else { switch(j){ case 21: case 23: case 24:\t//21、23、24对应1  num[cnt++]=1;break; case 22: case 25:\t//22、25对应2  num[cnt++]=2;break; case 26:\t//26对应3  num[cnt++]=3;break; } break;//switch 语句内的 break 仅能跳出 switch 而对外面的循环没有影响，  //因此必须在跳出 switch 后再 break 一次以确保跳出循环（其实继续遍历应该  //也没事，不会成功匹配只是浪费点时间）  } } } } if(!cnt) cout\u0026lt;\u0026lt;0,exit(0);//冷知识，虽然 return 0 不能写在逗号后面用于结束程序但是 \t// exit(0) 可以  for(int i=0;i\u0026lt;cnt;i++){ num[i]=num[i]*num[i]; num[i]%=100; } sort(num,num+cnt); if(num[0]) cout\u0026lt;\u0026lt;num[0]; for(int i=1;i\u0026lt;cnt;i++){ if(num[i]\u0026gt;10){ cout\u0026lt;\u0026lt;num[i]; } else { cout\u0026lt;\u0026lt;\u0026#39;0\u0026#39;\u0026lt;\u0026lt;num[i]; } } } 编辑记录\n修复数学公式渲染\n2021-08-06 18:39:00\n暂时移除的段落：\n 我得了 20 分（过了测试点#1）之后重读题面的理解是把数字的每一位拆分排序，而这个帖子的楼主的想法则是 25 和 4 的两种组合 425 和 254 中 254 更小。\n ","date":"2021-08-02T00:00:00Z","image":"https://ayx.moefox.tech/key-to-p1603/cover_hu33884e09a361eec376ba2239fc3bc8e1_84422_120x120_fill_q75_box_smart1.jpg","permalink":"https://ayx.moefox.tech/key-to-p1603/","title":"题解 P1603 斯诺登的密码"},{"content":"啥？装了 Stack 拷了 exampleSites 以后不能正常 hugo -D了？ 试试以下两项操作。\n删除根目录下的 config.toml Issus #105 @ CaiJimmy/hugo-theme-stack\n生成 examplesite/content/post/rich-content/index.md 时报错 是因为是示例文章有请求 Twitter API 的 Shortcode ，需要 珂学上网 。\n我的解决方式是直接把 YouTube 、 Twitter 和 Vimeo 的 ShortCode 都删了，反正以后也用不到（当然你也可以直接把这篇 rich-content 给整个删了）\nIssus #191 @ CaiJimmy/hugo-theme-stack\n另外，Bilibili 的 ShortCode 格式如下： （去掉两个反斜杠）\n\\{\\{\u0026lt; bilibili BV1Zx411h7ue \u0026gt;}}\n别一天到晚建博客了，赶紧写吧。 ","date":"2021-07-28T00:00:00Z","image":"https://ayx.moefox.tech/stack/%E5%B0%81%E9%9D%A2_hu68d4500f44eeff3c046abd6af3014f70_562499_120x120_fill_q75_box_smart1.jpg","permalink":"https://ayx.moefox.tech/stack/","title":"安装 Hugo 主题 Stack 时你可能会遇到的问题"},{"content":"我的博客的站内搜索已经搭载了这款 微内核万物互联分布式软总线形式化验证 搜索引擎，大家可以在侧边栏点击搜索抢先体验一下！\n相信这将是与 花瓣搜索 一样的优秀国产项目！让我们在一起拒绝卡脖子！星星之火可以燎原！\n","date":"2021-07-25T00:00:00Z","permalink":"https://ayx.moefox.tech/unicorn-search/","title":"独角兽搜索"},{"content":"你好，Hugo！ Bilibili Short Code Test \r","date":"2021-07-23T00:00:00Z","permalink":"https://ayx.moefox.tech/hellohugo/","title":"Hello Hugo"},{"content":"题目描述： 时间：1s 空间：32M\n公司派你去和几位客户面谈，以了解他们对公司产品的意见。你逐个打电话与客户联系，得知他们一般都很忙，不过他们还是可以为你抽出一点时间。现在的问题是有些客户的时间有冲突，你无法在一天内联系所有客户。所以你需要一个程序来帮助你安排第一天的工作，使得你能尽可能地和更多的客户进行联系。注意，客户不愿意你打乱他们的计划。如果你和某个客户约定见面，必须按时到达并且充分利用这段时间和他交谈，这样才不至于让他产生不满。你可以假设从一个客户处到另一个客户处的时间短得忽略不计。\n输入格式： 输入包括了多个测试数据，每个测试数据开头是一个整数 $n（1 \\le n \\le 10000）$，表示客户总数。接下来n行每行包括两个正整数 $s$、$t$，分别表示该客户的空闲时间段的起始时间和终止时间。$s\u0026lt;t$\n输出格式： 对于每个测试数据，在单独一行内输出你所能接触到的最多客户数。\n样例输入： 3 1 15 2 19 15 17 样例输出： 2\n约定： (无)\n提示： (无)\n代码 /* Name: 7、客户调查 Copyright: Aynxul03 Author: Aynxul03 Date: 2021-07-13 Description: 时间：1s 空间：32M 题目描述： 公司派你去和几位客户面谈，以了解他们对公司产品的意见。你逐个打电话与客户联系， 得知他们一般都很忙，不过他们还是可以为你抽出一点时间。现在的问题是有些客户的 时间有冲突，你无法在一天内联系所有客户。所以你需要一个程序来帮助你安排第一天 的工作，使得你能尽可能地和更多的客户进行联系。注意，客户不愿意你打乱他们的计 划。如果你和某个客户约定见面，必须按时到达并且充分利用这段时间和他交谈，这样 才不至于让他产生不满。你可以假设从一个客户处到另一个客户处的时间短得忽略不计。 输入格式： 输入包括了多个测试数据，每个测试数据开头是一个整数n（1\u0026lt;=n\u0026lt;=10000），表示客户总数。 接下来n行每行包括两个正整数s、t，分别表示该客户的空闲时间段的起始时间和终止时间。s\u0026lt;t 输出格式： 对于每个测试数据，在单独一行内输出你所能接触到的最多客户数。 */ #include\u0026lt;bits/stdc++.h\u0026gt;using namespace std; int n,lt,ans; struct sb{ int start,end; }client[1001]; bool cmp(sb a,sb b){return a.end\u0026lt;b.end;}//按结束时间升序 int main(){ ios::sync_with_stdio(0); cin\u0026gt;\u0026gt;n; for(int i=0;i\u0026lt;n;i++) cin\u0026gt;\u0026gt;client[i].start\u0026gt;\u0026gt;client[i].end; sort(client,client+n,cmp); //排序 \tfor(int i=0;i\u0026lt;n;i++) if(client[i].start\u0026gt;=lt) ans++,lt=client[i].end; cout\u0026lt;\u0026lt;ans; return 0; } ","date":"2021-07-13T00:00:00Z","permalink":"https://ayx.moefox.tech/upc1488/","title":"题解 UPC-1488 客户调查(client)"},{"content":"（题面来自洛谷）\n题目描述 yyy 的学校要求早上 8 点前到达。学校到 yyy 的家一共有 $s$($s\\le 10000$) 米，而 yyy 可以以 $v$($v\u0026lt;10000$) 米每分钟的速度匀速走到学校。此外在上学路上它还要额外花 10 分钟时间进行垃圾分类。请问为了避免迟到 yyy 最晚什么时候出门？输出 HH:MM 的时间格式，不足两位时补零。由于路途遥远， yyy 可能不得不提前一天出发，不过不可能提前超过一天。\n输入格式 两个正整数 s,v，意思已经在题目中给定。\n输出格式 hh:mm 表示最晚离开家的时间（时:分，必须输出两位，不足两位前面补0）\n输入输出样例 输入 #1\n100 99\n输出 #1\n07:48\n分析 小学的匀速直线运动问题，t=s/v 但是有几个小细节 1.不要忘了加上10分钟\n2.怎么输出HH:MM的格式？\n试了一下像保留小数点一样使用C的标准输入输出（Xchkoo口中所说的“那套老掉牙的cstdio”）的占位符，居然啪一下就行了\n3.怎么处理时分进位？60进制，因为不知道进几次所以用while循环实现就行了\n4.s/v有小数点怎么办？不能四舍五入，只能向上取整，因为迟到0.000000000001分钟也是迟到。\n5.千米迢迢上学的yyy问题：八个小时都到不了学校怎么办？当h自减变为-1的时候将h赋值为23即可，由于不可能提前超过一天出发（某学生连续赶路30余小时猝死）所以if即可\n6.h及m的计算问题：我的做法是赋初值08:00然后往回倒减分钟数，然后进位到小时位\n7.为什么要发水题的题解？这样比较容易坚持每天刷题===\n最近在我身上发生了很多事，但是不想放弃OI。\n代码 #include\u0026lt;bits/stdc++.h\u0026gt;using namespace std; int main() { int s,v; cin\u0026gt;\u0026gt;s\u0026gt;\u0026gt;v; int t=ceil(1.0*s/v); int h=8,m=-t-10; while(m\u0026lt;=0) { m+=60; h--; if(h\u0026lt;0) h=23; } printf(\u0026#34;%.2d:%.2d\u0026#34;,h,m); return 0; } 编辑记录\n2021-08-06 18:11:00\n","date":"2021-05-25T00:00:00Z","permalink":"https://ayx.moefox.tech/p5707/","title":"题解 P5707 【深基2.例12】上学迟到"},{"content":"（题面来自洛谷）\n题目描述 国王将金币作为工资，发放给忠诚的骑士。第一天，骑士收到一枚金币；之后两天（第二天和第三天），每天收到两枚金币；之后三天（第四、五、六天），每天收到三枚金币；之后四天（第七、八、九、十天），每天收到四枚金币……；这种工资发放模式会一直这样延续下去：当连续 $n$ 天每天收到 $n$ 枚金币后，骑士会在之后的连续 $n+1$ 天里，每天收到 $n+1$ 枚金币。\n请计算在前 $k$ 天里，骑士一共获得了多少金币。\n输入格式 一个正整数 $k$ ，表示发放金币的天数。\n输出格式 一个正整数，即骑士收到的金币数。\n输入输出样例 输入 #1\n6 输出 #1\n14 输入 #2\n1000 输出 #2\n29820 说明/提示\n【输入输出样例 1 说明】\n骑士第一天收到一枚金币；第二天和第三天，每天收到两枚金币；第四、五、六天，每天收到三枚金币。因此一共收到 $1+2+2+3+3+3=14$ 枚金币。\n对于 $100%$ 的数据，$1\\le k\\le 10^4$\n分析 代码 #include\u0026lt;bits/stdc++.h\u0026gt;using namespace std; int main() { int K,\t//发放金币的天数 \tcoin = 0,\t//骑士收到的金币数 \tper = 1,\t//每天发给骑士的金币数 \tremain = 1;\t//按此数量发放的剩余天数 \tcin\u0026gt;\u0026gt;K; for(int i=1;i\u0026lt;=day;i++) { coin+=per;\t//发放金币 \tif(--remain==0) remain=++per;\t//之后的 per+1 天每天发放 per+1 枚金币 \t} cout\u0026lt;\u0026lt;coin; return 0; } 编辑记录\n2021-08-06 18:10:00\n","date":"2021-05-09T00:00:00Z","permalink":"https://ayx.moefox.tech/p2669/","title":"题解 P2669 [NOIP2015 普及组] 金币"},{"content":"这题太有意思了，发个题解纪念一下\n题面来自洛谷\n$\\LaTeX$ 渲染不了，哭了（明明后台预览是可以渲染的啊=\n（搬到 Hugo 博客可以正常显示了）\n题目描述 给定 $n(n \\le 10000)$ 和 $k(k \\le 100)$，将从 $1$ 到 $n$ 之间的所有正整数可以分为两类：$A$ 类数可以被 $k$ 整除（也就是说是 $k$ 的倍数），而 $B$ 类数不能。请输出这两类数的平均数，精确到小数点后 $1$ 位，用空格隔开。\n数据保证两类数的个数都不会是 $0$。\n输入格式 无\n输出格式 无\n输入输出样例 输入 #1\n100 16 输出 #1\n56.0 50.1 分析 利用了等差数列等高阶数学知识来减少循环次数。\n代码（C++） #include\u0026lt;bits/stdc++.h\u0026gt;using namespace std; int main(){ int n,k,can,cant,all,num=0; cin\u0026gt;\u0026gt;n\u0026gt;\u0026gt;k; all=(n+1)*n/2; for(int i=k;i\u0026lt;=n;i+=k){ can+=i; num++; } cant=all-can; double a = (double)can/num; double a_ = (double)cant/(n-num); printf(\u0026#34;%.1lf %.1lf\u0026#34;,a,a_); return 0; } 编辑记录\n2021-08-13 12:01:00\n","date":"2021-02-20T00:00:00Z","permalink":"https://ayx.moefox.tech/p5719/","title":"题解 P5719 【深基4.例3】分类平均"},{"content":"如你所见，我的博客现在使用 Hugo，因此该修改版主题不太可能发布更新。\n此主题并非我的原创作品，原作者为 Wider Gao\n而且改得很烂，主页的文章展示都搞炸了（点击查看demo），不建议使用（但个人感觉也不是特别糟糕）\n我的改动 我作出了如下改动：\n 把原作者使用的js源（bootcss.com）替换为 bootcdn.net，提升加载速度（至少在我所在的地区可以） 把原作者在博客主题更新了一文中提供的 my.css 替换为从他的页面上扒下来的css（因为这个只有几十行的 my.css 根本没法用=我也不知道为什么，从页面上直接扒也是该文评论区提供的方法）  下载链接 文件均发布在 Pastebin.com 以及 Ubuntu Pastebin 上\n如需获取原版，请移步Wider Gao的博文\n页面定制 CSS 代码 Pastebin.com 复制 下载\nUbuntu Pastebin\n博客侧边栏公告 Pastebin.com 复制 下载\nUbuntu Pastebin\n页首 HTML 代码 只有一行，就直接放这了\n\u0026lt;link href=\u0026quot;https://cdn.bootcdn.net/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\u0026quot; rel=\u0026quot;stylesheet\u0026quot;\u0026gt;\n页脚 HTML 代码 Pastebin.com 复制 下载\nUbuntu Pastebin\n使用 先修改一下这些代码（把各种图片链接替换一下） 建议先粘贴到编辑器里操作（搬迁备注：现在博客园后台终于有能看的编辑器而不是光秃秃的HTML原汁原味文本框了，我青结）\n背景图 替换 https://cdn.luogu.com.cn/upload/image_hosting/utntnuud.png\n题外话：洛谷图床会屏蔽站外链接 :( 但是登陆了上传图片的洛谷账号就能加载\n这就是为什么之前syr看不到我博客园的头图而我能看到\n头像 替换 https://pic.cnblogs.com/avatar/2228888/20201128101240.png\n在博客园后台打开设置，将博客皮肤改为 Custom ，并勾选 禁用模板默认CSS ，然后将这些代码粘贴到框里，保存。\n实现正常显示需要申请两个（次）权限，一次HTML的，一次JS的。（申请HTML权限通过了才能申请JS权限）\n声明 本主题并非本人制作，如果这侵犯了您的权利，请发邮件和我取得联系，我将第一时间作出回应。\n 修改记录\n2021-08-06 17:37:00\n","date":"2021-01-06T00:00:00Z","permalink":"https://ayx.moefox.tech/cnblogs-theme-share/","title":"分享一下我的博客园在用的修改版 Wider Gao 博客园主题"},{"content":"我的解决方法 以 管理员身份 运行一个编辑器 打开 C:\\Program Files\\nodejs\\node_modules\\npm\\npmrc   如果你安装Node.js时修改了安装路径那么就不是这个路径了\n  如果这个文件不存在就自己新建一个文本文档并去掉扩展名 .txt\n  修改 C:\\Program Files\\nodejs\\node_modules\\npm\\.npmrc 没有用\n  填入以下内容并保存 proxy = null registry = https://registry.npm.taobao.org disturl = https://npm.taobao.org/dist 然后再重新尝试安装Hexo（npm install hexo-cli -g）即可。 如果依旧无法解决可以尝试在以管理员身份启动的命令提示符或 Powershell 中执行此命令 npm config set disturl https://npm.taobao.org/dist 文章迁移备注 从博客园搬文章的时候无意发现本文已被以下站点转载：\nqdmana.com\nyunjuu.com\n我并未授权这些网站转载我的文章。\n虽然这篇博客没有花我很多时间，但是这些网站的行为让我感到十分不满。\n 编辑记录\n2021-08-05 13:20:00\n","date":"2021-01-05T00:00:00Z","permalink":"https://ayx.moefox.tech/rollbackfailedoptional/","title":"使用 Node.js（安装Hexo）时出现了 rollbackFailedOptional 错误的解决方法"},{"content":"题面链接 HDU 2063\nVjudge\n题意概述 求一个二分图最大匹配的边数\n题目标签 匈牙利算法模板题\n参考代码 #include \u0026lt;bits/stdc++.h\u0026gt;using namespace std; #define maxn 1000 + 10 int n, m, k, head[maxn], link[maxn], cnt, tot; bool vis[maxn]; struct Edge { int to, nxt; }edge[maxn]; void add(int u, int v) { edge[cnt].to = v; edge[cnt].nxt = head[u]; head[u] = cnt; cnt++; } bool dfs(int u) //深搜判断对于点集v2中的一个点u是否能与点集v1中的一个点v匹配 { for(int i = head[u]; i != -1; i = edge[i].nxt){ //枚举能匹配的点 \tint v = edge[i].to; //v为能与u匹配的点编号 \tif(vis[v]) continue; //利用一个vis判断当前点是否尝试匹配过，如果已经匹配过就跳过以防死循环 \tvis[v] = true; if(link[v] == -1 || dfs(link[v])){ //如果v可以腾出位置（即没有与v2中的任何一个点匹配或v2中还存在没有匹配过的点可以与之匹配） \tlink[v] = u; //u与v成功匹配 \treturn true; } } return false; } int getcp(int n){ int ans = 0; memset(link, -1, sizeof(link)); for(int i = 1; i \u0026lt;= n; i++){ //遍历每个点集v2中的点 \tmemset(vis, false, sizeof(vis)); if(dfs(i)) ans++; } return ans; } int main(){ while(scanf(\u0026#34;%d\u0026#34;, \u0026amp;k) != EOF){ if(!k) break; scanf(\u0026#34;%d%d\u0026#34;, \u0026amp;m, \u0026amp;n); memset(head, -1, sizeof(head)); cnt = 0; for(int i = 1; i \u0026lt;= k; i++){ int u, v; scanf(\u0026#34;%d%d\u0026#34;, \u0026amp;u, \u0026amp;v); v += m; //把点集v1中的点的编号调整到点集v2后面 \tadd(u, v); } printf(\u0026#34;%d\\n\u0026#34;, getcp(m)); } return 0; } 参考博文 想理解匈牙利算法的概念，推荐阅读趣写算法系列之\u0026ndash;匈牙利算法（推荐在教练的陪同下阅读）\n评论区有朋友通俗易懂地概括了它的思想：先到先得 能让就让\nhdu 2063 过山车 (匈牙利算法模板题) – 111qqz的小窝\n 编辑记录\n2021-08-05 13:37:00\n","date":"2020-12-30T00:00:00Z","permalink":"https://ayx.moefox.tech/hdu2063/","title":"题解 HDU2063 过山车"},{"content":"OpenJudge - 01:A+B问题\n信息学奥赛一本通（C++版）在线评测系统\n如果非要做这题我推荐第一个 OJ，第二个 OJ 的界面实在惨不忍睹\n（虽然第一个题目有题号检索比较方便而且貌似用户比较多）\n更好的选择是不要做《信奥赛一本通》的题\n题目的背景、描述、输入输出格式样例 1000：入门测试题目 时间限制: 1000 ms 内存限制: 32768 KB 【题目描述】 求两个整数的和。 【输入】 一行，两个用空格隔开的整数。 【输出】 两个整数的和。 【输入样例】 1 2 【输出样例】 3 题意分析与算法设计 新手不用理会 时间限制 和 内存限制，一般来说学到后面才会出现 TLE（Time Limit Exceed，超出时间限制）和 MLE（Memory Limit Exceed，超出内存限制）的情况。\n（关于这些术语，可以在这里了解。）\n至于这个问题，就是一个最简单的 A+B 问题。\n参考用完整代码 各位一定要养成良好的代码风格，因为代码不仅仅是给机器看的，有时候人也要看。\n使用 cin/cout（需要调用 iostreeam 头文件）：\n#include \u0026lt;iostream\u0026gt;using namespace std; int main() { int a, b; cin \u0026gt;\u0026gt; a \u0026gt;\u0026gt; b; cout \u0026lt;\u0026lt; a + b \u0026lt;\u0026lt; endl; } 使用 scanf/printf（需要调用 cstdio 头文件）：\n#include \u0026lt;cstdio\u0026gt;using namespace std; int main() { int a, b; scanf(\u0026#34;%d%d\u0026#34;, \u0026amp;a, \u0026amp;b); printf(\u0026#34;%d\u0026#34;, a + b); } 这两种风格的输入输出各有长处，各位务必都要掌握。\n实际上，第二份代码中没有用到任何 C++ 特性，因此不加 using namespace std; 也没关系。\n 为什么这种题你还要水一篇题解出来\n 编辑记录\n2021-08-06 18:42:00 UTC+8\n最后更新于 OCT 19, 2021 21:57 UTC+8\n","date":"2020-12-04T00:00:00Z","permalink":"https://ayx.moefox.tech/ybt1000/","title":"题解 YBT 1000：入门测试题目"},{"content":"(题面来自洛谷)\n题目描述 我国历史上有个著名的故事： 那是在2300年以前。齐国的大将军田忌喜欢赛马。他经常和齐王赛马。他和齐王都有三匹马：常规马，上级马，超级马。一共赛三局，每局的胜者可以从负者这里取得200银币。每匹马只能用一次。齐王的马好，同等级的马，齐王的总是比田忌的要好一点。于是每次和齐王赛马，田忌总会输600银币。\n田忌很沮丧，直到他遇到了著名的军师――孙膑。田忌采用了孙膑的计策之后，三场比赛下来，轻松而优雅地赢了齐王200银币。这实在是个很简单的计策。由于齐王总是先出最好的马，再出次好的，所以田忌用常规马对齐王的超级马，用自己的超级马对齐王的上级马，用自己的上级马对齐王的常规马，以两胜一负的战绩赢得200银币。实在很简单。\n如果不止三匹马怎么办？这个问题很显然可以转化成一个二分图最佳匹配的问题。把田忌的马放左边，把齐王的马放右边。田忌的马A和齐王的B之间，如果田忌的马胜，则连一条权为200的边；如果平局，则连一条权为0的边；如果输，则连一条权为－200的边……如果你不会求最佳匹配，用最小费用最大流也可以啊。 然而，赛马问题是一种特殊的二分图最佳匹配的问题，上面的算法过于先进了，简直是杀鸡用牛刀。现在，就请你设计一个简单的算法解决这个问题。\n输入格式 第一行一个整数n，表示他们各有几匹马（两人拥有的马的数目相同）。第二行n个整数，每个整数都代表田忌的某匹马的速度值(0 \u0026lt;= 速度值\u0026lt;= 100)。第三行n个整数，描述齐王的马的速度值。两马相遇，根据速度值的大小就可以知道哪匹马会胜出。如果速度值相同，则和局，谁也不拿钱。\n【数据规模】\n对于20%的数据，1\u0026lt;=N\u0026lt;=65；\n对于40%的数据，1\u0026lt;=N\u0026lt;=250；\n对于100%的数据，1\u0026lt;=N\u0026lt;=2000。\n输出格式 仅一行，一个整数，表示田忌最大能得到多少银币。\n输入输出样例 输入 #1\n3 92 83 71 95 87 74 输出 #1\n200 分析 都在代码注释里了\n代码 // Problem: P1650 田忌赛马 // Contest: Luogu // URL: https://www.luogu.com.cn/problem/P1650 // Memory Limit: 125 MB // Time Limit: 1000 ms // // Powered by CP Editor (https://cpeditor.org)  #include\u0026lt;bits/stdc++.h\u0026gt;using namespace std; int n, a[2001],\t//田忌的马 \tb[2001],\t//齐王的马 \tm1, m2, qian; int main(){ scanf(\u0026#34;%d\u0026#34;,\u0026amp;n); for(int i=0;i\u0026lt;n;i++) scanf(\u0026#34;%d\u0026#34;,\u0026amp;a[i]); for(int i=0;i\u0026lt;n;i++) scanf(\u0026#34;%d\u0026#34;,\u0026amp;b[i]); sort(a,a+n); sort(b,b+n); int n1=n-1, n2=n-1; while(m1\u0026lt;=n1){ if(a[n1]\u0026gt;b[n2]){\t//田忌最快的比齐王最快的快 \tqian+=200;\t//赢钱 \tn1--,n2--;\t//两边各去掉一匹马 \t}else if(a[n1]\u0026lt;b[n2]){//田忌最快的赢不了齐王最快的，就丢一匹最慢的 \tqian-=200;\t//输钱 \tm1++,n2--; }else{\t//如果 势 均 力 敌 的话 \tif(a[m1]\u0026gt;b[m2]){ //田忌最慢的能赢齐王最慢的，就上 \tqian+=200;\t//赢钱 \tm1++,m2++;\t}else{\t//赢不了就用最慢的消耗齐王最快的 \tif(a[m1]\u0026lt;b[n2]) qian-=200;\t//我 再 忍 你 一 手 \tm1++,n2--; } } } printf(\u0026#34;%d\u0026#34;,qian); return 0; } 修改记录\n2021-02-19 19:20 发布于博客园\n2021-08-06 17:57 迁移自博客园\n搬文章的时候瞎画的封面图还是决定不摆上去了\u0026hellip;\n","date":"2020-02-19T00:00:00Z","permalink":"https://ayx.moefox.tech/p1650/","title":"题解 P1650 田忌赛马"},{"content":"正经解释    简称 全称 中文称谓 补充说明 \u0026amp; 修改建议     OJ Online Judge 在线判题系统 可以对你的程序进行评测并给出结果。洛谷、SPOJ、Codeforces、Vijos、UVa OJ 都是在线判题系统   AC Accepted 通过 嘲讽你还没过的同学 想想在时间和空间上能否做到更优，或是继续做其他题目   WA Wrong Answer 答案错误 你的程序在规定的时间和内存限制内里输出了错误的答案，因此没有得分（想一想，有没有没有考虑到的特殊情况？如果你的程序根本无法对样例输入输出正确的答案，那么你的思路很可能有问题）   TLE Time Limit Exceed 超出时间限制 你的程序在该测试点上超出了题目给定的时间仍未结束运行，因此被强行中止（检查是否存在死循环或过多的循环，使用时间复杂度更优的算法，进行一些常数及输入输出优化，剪枝）如果你的程序能正常给出答案，记得使用循环控制语句 break 或 return 0、exit(0) 这样的语句结束程序；在一些评测系统老旧的 OJ 中，没有读入完输入的数据也会造成 TLE，但是在洛谷不会发生。   OLE Output Limit Exceed 超出输出限制 你的程序在这个测试点中输出的字符数量超出了限制，因此被系统强行中止（检查是否存在死循环和没有注释掉的调试用输出语句）   MLE Memory Limit Exceed 超出内存限制 你的程序在运行过程中占用了过多的内存，因此被系统强行中止（检查是否在程序中使用了过大的数组或是往 STL 容器中存入了过多的数据）   RE Runtime Error 运行时出错 检查是否存在数组越界访问（尤其是C(++)语言选手）。另外，如果你在 main 函数中返回一个非 0 的值也会被系统认为程序异常退出   PE Presentation Error 格式错误 检查输出的空格/换行符数量是否与题面中的要求严格一致   CE Compile Error 编译错误 你的程序根本无法通过编译，也就没有可执行文件可以用来评测（检查语法，初学者建议着重检查分号和全角标点，建议敲代码时禁用中文输入法）   UKE Unknown Error 未知错误 评测姬也不知道出了什么问题（联系 OJ 管理员或出题人，稍后再尝试重新提交）    哈哈太搞笑了    简写 全称 中文称谓     AC Answer Cubi 粗鄙的答案   WA Wonderful Answer 优美的答案   TLE Time Limit Enough 时间充裕   OLE Output Limit Enough 输出足够   MLE Memory Limit Enough 内存充裕   RE Runtime Excellent 运行时（过于） 优秀   PE Pretty Excellent 十分优秀   CE Compile Easily 轻松通过编译   UKE Unbelievable Keeping Excellent 难以置信的保持优秀     AC=Answer Cubi 粗鄙的答案 WA=Wonderful Answer 优美的答案 TLE=Time Limit Enough 时间充裕 OLE=Output Limit Enough 输出足够 MLE=Memory Limit Enough 内存充裕 RE=Runtime Excellent 运行时（过于）优秀 PE=Pretty Excellent 十分优秀 CE=Compile Easily 轻松通过编译 UKE=Unbelievable Keeping Excellent 难以置信的保持优秀    出现AC时你需要将你的答案变得更优美才能通过； 而TLE、OLE、MLE、ER经常同时出现，可以给予你少量的额外分数； PE、CE都能给予你大量的额外分数； UKE这个标签非常稀有，可以让你直接通过这次比赛并名列前茅。  ","date":"2019-12-29T00:00:00Z","permalink":"https://ayx.moefox.tech/explanation-of-oj-terminology/","title":"OJ术语的解释： AC、WA、TLE、OLE、MLE、RE、PE、CE、UKE 都是些啥？"}]