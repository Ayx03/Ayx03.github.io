[{"content":"  又摸了一下午整了个这么个东西出来 要得到 A+ 评级，您的网站必须启用 HSTS 且 max-age 属性不小于 6个月（即 15768000 秒） 请注意启用 HSTS 后所有不支持 HTTPS 的子域名都将无法访问，且在 max-age 属性设置的时间内无法恢复。 要得到 ATS 合规 ，您的网站必须支持 TLS v1.2。 要得到 PCI DSS 合规，您的网站不得支持 TLS v1.0。 PCI安全标准委员会规定2018年6月30日之后，开启TLS1.0将导致PCI DSS不合规，\n具体参考：《更严格的PCI DSS合规标准》\nHSTS 相关配置可以参考 MySSL.com 的 HTTPS安全与兼容性配置指南 HTTP Strict Transport Security Header Testing Tool\n","date":"2021-08-02T00:00:00Z","image":"https://aynxu.l03.me/p/ssl/matt-le-SJSpo9hQf7s-unsplash_hu958d513eeefe5556a31d065479ecc5ac_14205_120x120_fill_q75_box_smart1.jpg","permalink":"https://aynxu.l03.me/p/ssl/","title":"MySSL 安全签章"},{"content":"P1603 斯诺登的密码 by @worcher [金钩👴] | 普及- 题目背景 根据斯诺登事件出的一道水题\n题目描述 2013 年 X 月 X 日，俄罗斯办理了斯诺登的护照，于是他混迹于一架开往委内瑞拉的飞机。但是，这件事情太不周密了，因为FBI的间谍早已获悉他的具体位置——但这不是最重要的——最重要的是如果要去委内瑞拉，那么就要经过古巴，而经过古巴的路在美国的掌控之中。\n丧心病狂的奥巴马迫降斯诺登的飞机，搜查时却发现，斯诺登杳无踪迹。但是，在据说是斯诺登的座位上，发现了一张纸条。纸条由纯英文构成：Obama is a two five zero.（以 . 结束输出，只有 6 个单词+一个句号，句子开头如没有大写亦为合法）这句话虽然有点无厘头，但是警官陈珺骛发现这是一条极其重要的线索。他在斯诺登截获的一台笔记本中找到了一个 C++ 程序，输入这条句子后立马给出了相对应的密码。陈珺鹜高兴得晕了过去，身为警官的你把字条和程序带上了飞机，准备飞往曼哈顿国际机场，但是在飞机上检查的时候发现——程序被粉碎了！飞机抵达华盛顿只剩5分钟，你必须在这 5 分钟内编写（杜撰）一个程序，免受上司的 10000000000%10 大板。破译密码的步骤如下：\n（1）找出句子中所有用英文表示的数字(≤20)，列举在下：\n正规：one two three four five six seven eight nine ten eleven twelve thirteen fourteen fifteen sixteen seventeen eighteen nineteen twenty\n非正规：a both another first second third。为避免造成歧义，another 算作 1 处理。\n（2）将这些数字平方后对 100 取模，如 00,05,11,19,86,99。\n（3）把这些两位数按数位排成一行，组成一个新数，如果开头为 0，就去 0。\n（4）找出所有排列方法中最小的一个数，即为密码。\n// 数据已经修正 By absi2011 如果还有问题请联系我\n输入格式 一个含有 6 个单词的句子。\n输出格式 一个整型变量（密码）。如果没有符合要求的数字出现，则输出 0。\n输入输出样例 输入 #1\nBlack Obama is two five zero . 输出 #1\n425 分析 数据咋骂人呢\n先一个个输入单词与题目给出的 26 个单词匹配（string 类型可以直接使用 ==，C++ 选手谁闲着没事用 char 数组啊），由于知道单词数量是 6 个并不需要用到 while 循环（输入字符串的情况下循环条件也不知道选哪个）\n一些问题 只能得 20 分？ 测试点#2 的数据（请勿打表）：\nYou are a three eight pig . 10964 一般 20 分程序给出的答案是 1964，也就是忽略了所有 0，但实际上只能忽略第一个。\n记得排序。\nif(num[0]) cout\u0026lt;\u0026lt;num[0]; for(int i=1;i\u0026lt;cnt;i++){ if(num[i]\u0026gt;10) cout\u0026lt;\u0026lt;num[i]; else cout\u0026lt;\u0026lt;\u0026#39;0\u0026#39;\u0026lt;\u0026lt;num[i]; } 为什么样例输出不是 245 / 254 ？ 我得了 20 分（过了测试点#1）之后重读题目的理解是把数字的每一位拆分排序，而这个帖子的楼主的想法则是 25 和 4 的两种组合 425 和 254 中 254 更小（25和4组成的最小数不是254吗，为什么样例给的425）。可能是我们理解能力太差了。（不排除题面存在歧义）\n没有任何单词匹配的情况 可能就我没看清题？\n直接输出 0 结束程序即可。 其实不结束也啥都输出不出来\nif(!cnt) cout\u0026lt;\u0026lt;0,exit(0); 冷知识，虽然 return 0; 不能写在逗号后面用于结束程序（会出现编译错误）但是 exit(0); 可以\n完整代码 仅供学习参考使用 抄袭、复制题解，以达到刷 AC 率/AC 数量或其他目的的行为，在洛谷是严格禁止的。\n洛谷非常重视学术诚信。此类行为将会导致您成为作弊者。 具体细则请查看洛谷社区规则。\n#include\u0026lt;bits/stdc++.h\u0026gt;using namespace std; string tmp,dic[27]={\u0026#34;\u0026#34;,\u0026#34;one\u0026#34;,\u0026#34;two\u0026#34;,\u0026#34;three\u0026#34;,\u0026#34;four\u0026#34;,\u0026#34;five\u0026#34;,//并不会出现zero \u0026#34;six\u0026#34;,\u0026#34;seven\u0026#34;,\u0026#34;eight\u0026#34;,\u0026#34;nine\u0026#34;,\u0026#34;ten\u0026#34;,//但是这里我为了前20个数下标对应数值把0空着 \u0026#34;eleven\u0026#34;,\u0026#34;twelve\u0026#34;,\u0026#34;thirteen\u0026#34;,\u0026#34;fourteen\u0026#34;,\u0026#34;fifteen\u0026#34;, \u0026#34;sixteen\u0026#34;,\u0026#34;seventeen\u0026#34;,\u0026#34;eighteen\u0026#34;,\u0026#34;nineteen\u0026#34;,\u0026#34;twenty\u0026#34;, \u0026#34;a\u0026#34;,\u0026#34;both\u0026#34;,\u0026#34;another\u0026#34;,\u0026#34;first\u0026#34;,\u0026#34;second\u0026#34;,\u0026#34;third\u0026#34;}; int num[6],cnt; int main(){ for(int i=0;i\u0026lt;6;i++){ cin\u0026gt;\u0026gt;tmp; if(!i\u0026amp;\u0026amp;tmp[0]\u0026gt;=\u0026#39;A\u0026#39;\u0026amp;\u0026amp;tmp[0]\u0026lt;=\u0026#39;Z\u0026#39;) tmp[0]+=\u0026#39;a\u0026#39;-\u0026#39;A\u0026#39;; for(int j=1;j\u0026lt;=26;j++){ if(tmp==dic[j]){ if(j\u0026lt;=20){\t//在下标1-20匹配即对应1-20  num[cnt++]=j; break; } else { switch(j){ case 21: case 23: case 24:\t//21、23、24对应1  num[cnt++]=1;break; case 22: case 25:\t//22、25对应2  num[cnt++]=2;break; case 26:\t//26对应3  num[cnt++]=3;break; } break;//switch 语句内的 break 仅能跳出 switch 而对外面的循环没有影响，  //因此必须在跳出 switch 后再 break 一次以确保跳出循环（其实继续遍历应该  //也没事，不会成功匹配只是浪费点时间）  } } } } if(!cnt) cout\u0026lt;\u0026lt;0,exit(0);//冷知识，虽然 return 0 不能写在逗号后面用于结束程序但是 \t// exit(0) 可以  for(int i=0;i\u0026lt;cnt;i++){ num[i]=num[i]*num[i]; num[i]%=100; } sort(num,num+cnt); if(num[0]) cout\u0026lt;\u0026lt;num[0]; for(int i=1;i\u0026lt;cnt;i++){ if(num[i]\u0026gt;10){ cout\u0026lt;\u0026lt;num[i]; } else { cout\u0026lt;\u0026lt;\u0026#39;0\u0026#39;\u0026lt;\u0026lt;num[i]; } } } ","date":"2021-08-02T00:00:00Z","image":"https://aynxu.l03.me/p/key-to-p1603/cover_hu33884e09a361eec376ba2239fc3bc8e1_84422_120x120_fill_q75_box_smart1.jpg","permalink":"https://aynxu.l03.me/p/key-to-p1603/","title":"题解 P1603 斯诺登的密码"},{"content":"啥？装了 Stack 拷了 exampleSites 以后不能正常 hugo -D了？ 试试以下两项操作。\nRemove config.toml Issus #105 @ CaiJimmy/hugo-theme-stack\n生成 examplesite/content/post/rich-content/index.md 时报错是因为是示例文章有请求 Twitter API 的 Shortcode ，需要 珂学上网 。 我的解决方式是直接把 YouTube 、 Twitter 和 Vimeo 的 ShortCode 都删了，反正以后也用不到（当然你也可以直接把这篇 rich-content 给整个删了）\nIssus #191 @ CaiJimmy/hugo-theme-stack\n另外，Bilibili 的 ShortCode 格式如下： （去掉两个反斜杠）\n\\{\\{\u0026lt; bilibili BV1Zx411h7ue \u0026gt;}}\n别一天到晚建博客了，赶紧写吧。 ","date":"2021-07-28T00:00:00Z","image":"https://aynxu.l03.me/p/problems-installing-stack/%E5%B0%81%E9%9D%A2_hu68d4500f44eeff3c046abd6af3014f70_562499_120x120_fill_q75_box_smart1.jpg","permalink":"https://aynxu.l03.me/p/problems-installing-stack/","title":"安装 Hguo-Theme-Stack 主题时你可能会遇到的问题"},{"content":"我的博客的站内搜索已经搭载了这款 微内核万物互联分布式软总线形式化验证 搜索引擎，大家可以抢先体验一下！\n相信这将是与 花瓣搜索 一样的优秀国产项目！让我们在一起拒绝卡脖子！星星之火可以燎原！\n","date":"2021-07-25T00:00:00Z","image":"https://aynxu.l03.me/p/unicorn-search/the-creative-exchange-d2zvqp3fpro-unsplash_huf941de4769045cdfa8c9ee7036519a2a_35369_120x120_fill_q75_box_smart1.jpg","permalink":"https://aynxu.l03.me/p/unicorn-search/","title":"独角兽搜索"},{"content":"Bilibili Short Code Test \r\rHugo 同时还内置了对于 YouTube、Twitter、Vimeo 的 ShortCode 支持，但由于生成时无法访问相关 API 会出错（懒得想办法让Cla$h接管Hugo的连接），因此在此移除。 MarkDown 测试\n1.1.1. 然后就不会继续生成目录了 差不多得了🤬","date":"2021-07-23T00:00:00Z","permalink":"https://aynxu.l03.me/p/hello-hugo/","title":"Hello Hugo"},{"content":"我的解决方法 以 管理员身份 运行一个编辑器 打开 C:\\Program Files\\nodejs\\node_modules\\npm\\npmrc   如果你安装Node.js时修改了安装路径那么就不是这个路径了\n  如果这个文件不存在就自己新建一个文本文档并去掉扩展名 .txt\n  修改 C:\\Program Files\\nodejs\\node_modules\\npm\\.npmrc 没有用\n  填入以下内容并保存 proxy = null registry = https://registry.npm.taobao.org disturl = https://npm.taobao.org/dist 然后再重新尝试安装Hexo（npm install hexo-cli -g）即可。 如果依旧无法解决可以尝试在以管理员身份启动的命令提示符或 Powershell 中执行此命令 npm config set disturl https://npm.taobao.org/dist 文章迁移备注 从博客园搬文章的时候无意发现本文已被以下站点转载：\nqdmana.com\nyunjuu.com\n","date":"2021-01-05T00:00:00Z","permalink":"https://aynxu.l03.me/p/error-installing-hexo/","title":"使用Node.js（安装Hexo）时出现了 rollbackFailedOptional 的解决方法"}]