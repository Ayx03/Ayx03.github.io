<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>技术 on Aynxul03 写字的地方</title>
    <link>https://ayx.moefox.tech/tags/%E6%8A%80%E6%9C%AF/</link>
    <description>Recent content in 技术 on Aynxul03 写字的地方</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sun, 22 Aug 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://ayx.moefox.tech/tags/%E6%8A%80%E6%9C%AF/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>出现 error: ld returned 1 exit status 的五种原因以及解决方法</title>
      <link>https://ayx.moefox.tech/error-ld-returned-1-exit-status/</link>
      <pubDate>Sun, 22 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://ayx.moefox.tech/error-ld-returned-1-exit-status/</guid>
      <description>这个错误让人懵圈的地方就在于它不会给出错误出现的位置，让已经写了几百行的你痛不欲生。
可执行文件被占用了 因此编译器无法覆盖旧的可执行文件，所以编译失败。
这很有可能是你没发现它还没结束运行。
（我目前在用的 IDE：Visual Studio Code）
扩展：C/C++ Compile Run（可以方便地编译单个 cpp 文件，且不会因为路径中存在空格或中文出错。）  
解决方案 Dev C++ 等 IDE 直接把弹出的窗口（黑框）关了就行了
VS Code 可以从输出切换到终端选项卡，使用快捷键 Ctrl+C 结束程序（同样适用于 external console ）。
实在不行就用任务管理器和 taskkill 吧  
主函数不存在（main 拼写错误） 你不太可能不写主函数，但是你很有可能把 main 打成 mian 或者什么其他奇怪的东西。
在编译器眼里，这些可不能算主函数。
 
解决方案 把 main 拼对。
所调用的函数仅进行了声明 这种情况下新版编译器仍旧会输出 error: ld returned 1 exit status 这一让人迷惑的错误。   但是一般也不会把函数体和声明分开写吧&amp;hellip;
（函数声明在主函数上方即可，函数体是可以写在 main 函数下方的。）
解决方案 把漏写了的函数体补上。
（旧版编译器）在主函数中定义了函数 新版编译器发现你在 main 函数中定义了其它函数报错并不是error: ld returned 1 exit status，</description>
    </item>
    
    <item>
      <title>MySSL 安全签章</title>
      <link>https://ayx.moefox.tech/ssl/</link>
      <pubDate>Mon, 02 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://ayx.moefox.tech/ssl/</guid>
      <description>MySSL 安全认证   又摸了一下午整了个这么个东西出来 要得到 A+ 评级，您的网站必须启用 HSTS 且 max-age 属性不小于 6个月（即 15768000 秒） 请注意启用 HSTS 后所有不支持 HTTPS 的子域名都将无法访问，且在 max-age 属性设置的时间内无法恢复。 要得到 ATS 合规 ，您的网站必须支持 TLS v1.2。 要得到 PCI DSS 合规，您的网站不得支持 TLS v1.0。 PCI安全标准委员会规定2018年6月30日之后，开启TLS1.0将导致PCI DSS不合规，
具体参考：《更严格的PCI DSS合规标准》
HSTS 相关配置可以参考 MySSL.com 的 HTTPS安全与兼容性配置指南 HTTP Strict Transport Security Header Testing Tool</description>
    </item>
    
    <item>
      <title>题解 P1603 斯诺登的密码</title>
      <link>https://ayx.moefox.tech/key-to-p1603/</link>
      <pubDate>Mon, 02 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://ayx.moefox.tech/key-to-p1603/</guid>
      <description>题面来自洛谷，根据我的个人喜好有小修改
题目背景 根据斯诺登事件出的一道水题
题目描述 2013 年 X 月 X 日，俄罗斯办理了斯诺登的护照，于是他混迹于一架开往委内瑞拉的飞机。但是，这件事情太不周密了，因为 FBI 的间谍早已获悉他的具体位置——但这不是最重要的——最重要的是如果要去委内瑞拉，那么就要经过古巴，而经过古巴的路在美国的掌控之中。
丧心病狂的奥巴马迫降斯诺登的飞机，搜查时却发现，斯诺登杳无踪迹。但是，在据说是斯诺登的座位上，发现了一张纸条。纸条由纯英文构成：Obama is a two five zero.（以 . 结束输出，只有 6 个单词+一个句号，句子开头如没有大写亦为合法）这句话虽然有点无厘头，但是警官陈珺骛发现这是一条极其重要的线索。他在斯诺登截获的一台笔记本中找到了一个 C++ 程序，输入这条句子后立马给出了相对应的密码。陈珺鹜高兴得晕了过去，身为警官的你把字条和程序带上了飞机，准备飞往曼哈顿国际机场，但是在飞机上检查的时候发现——程序被粉碎了！飞机抵达华盛顿只剩5分钟，你必须在这 5 分钟内编写（杜撰）一个程序，免受上司的 10000000000%10 大板。破译密码的步骤如下：
（1）找出句子中所有用英文表示的数字($\leq 20$)，列举在下：
正规：one two three four five six seven eight nine ten eleven twelve thirteen fourteen fifteen sixteen seventeen eighteen nineteen twenty
非正规：a both another first second third。为避免造成歧义，another 算作 $1$ 处理。
（2）将这些数字平方后对 $100$ 取模，如 $00,05,11,19,86,99$。
（3）把这些两位数按数位排成一行，组成一个新数，如果开头为 $0$，就去 $0$。
（4）找出所有排列方法中最小的一个数，即为密码。
// 数据已经修正 By absi2011 如果还有问题请联系我</description>
    </item>
    
    <item>
      <title>安装 Hugo 主题 Stack 时你可能会遇到的问题</title>
      <link>https://ayx.moefox.tech/stack/</link>
      <pubDate>Wed, 28 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://ayx.moefox.tech/stack/</guid>
      <description>啥？装了 Stack 拷了 exampleSites 以后不能正常 hugo -D了？ 试试以下两项操作。
删除根目录下的 config.toml Issus #105 @ CaiJimmy/hugo-theme-stack
生成 examplesite/content/post/rich-content/index.md 时报错 是因为是示例文章有请求 Twitter API 的 Shortcode ，需要 珂学上网 。
我的解决方式是直接把 YouTube 、 Twitter 和 Vimeo 的 ShortCode 都删了，反正以后也用不到（当然你也可以直接把这篇 rich-content 给整个删了）
Issus #191 @ CaiJimmy/hugo-theme-stack
另外，Bilibili 的 ShortCode 格式如下： （去掉两个反斜杠）
\{\{&amp;lt; bilibili BV1Zx411h7ue &amp;gt;}}
别一天到晚建博客了，赶紧写吧。 </description>
    </item>
    
    <item>
      <title>独角兽搜索</title>
      <link>https://ayx.moefox.tech/unicorn-search/</link>
      <pubDate>Sun, 25 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://ayx.moefox.tech/unicorn-search/</guid>
      <description>我的博客的站内搜索已经搭载了这款 微内核万物互联分布式软总线形式化验证 搜索引擎，大家可以在侧边栏点击搜索抢先体验一下！
相信这将是与 花瓣搜索 一样的优秀国产项目！让我们在一起拒绝卡脖子！星星之火可以燎原！</description>
    </item>
    
    <item>
      <title>题解 P5707 【深基2.例12】上学迟到</title>
      <link>https://ayx.moefox.tech/p5707/</link>
      <pubDate>Tue, 25 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://ayx.moefox.tech/p5707/</guid>
      <description>（题面来自洛谷）
题目描述 yyy 的学校要求早上 8 点前到达。学校到 yyy 的家一共有 $s$($s\le 10000$) 米，而 yyy 可以以 $v$($v&amp;lt;10000$) 米每分钟的速度匀速走到学校。此外在上学路上它还要额外花 10 分钟时间进行垃圾分类。请问为了避免迟到 yyy 最晚什么时候出门？输出 HH:MM 的时间格式，不足两位时补零。由于路途遥远， yyy 可能不得不提前一天出发，不过不可能提前超过一天。
输入格式 两个正整数 s,v，意思已经在题目中给定。
输出格式 hh:mm 表示最晚离开家的时间（时:分，必须输出两位，不足两位前面补0）
输入输出样例 输入 #1
100 99
输出 #1
07:48
分析 小学的匀速直线运动问题，t=s/v 但是有几个小细节 1.不要忘了加上10分钟
2.怎么输出HH:MM的格式？
试了一下像保留小数点一样使用C的标准输入输出（Xchkoo口中所说的“那套老掉牙的cstdio”）的占位符，居然啪一下就行了
3.怎么处理时分进位？60进制，因为不知道进几次所以用while循环实现就行了
4.s/v有小数点怎么办？不能四舍五入，只能向上取整，因为迟到0.000000000001分钟也是迟到。
5.千米迢迢上学的yyy问题：八个小时都到不了学校怎么办？当h自减变为-1的时候将h赋值为23即可，由于不可能提前超过一天出发（某学生连续赶路30余小时猝死）所以if即可
6.h及m的计算问题：我的做法是赋初值08:00然后往回倒减分钟数，然后进位到小时位
7.为什么要发水题的题解？这样比较容易坚持每天刷题===
最近在我身上发生了很多事，但是不想放弃OI。
代码 #include&amp;lt;bits/stdc++.h&amp;gt;using namespace std; int main() { int s,v; cin&amp;gt;&amp;gt;s&amp;gt;&amp;gt;v; int t=ceil(1.0*s/v); int h=8,m=-t-10; while(m&amp;lt;=0) { m+=60; h--; if(h&amp;lt;0) h=23; } printf(&amp;#34;%.</description>
    </item>
    
    <item>
      <title>题解 P5719 【深基4.例3】分类平均</title>
      <link>https://ayx.moefox.tech/p5719/</link>
      <pubDate>Sat, 20 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://ayx.moefox.tech/p5719/</guid>
      <description>这题太有意思了，发个题解纪念一下
题面来自洛谷
$\LaTeX$ 渲染不了，哭了（明明后台预览是可以渲染的啊=
（搬到 Hugo 博客可以正常显示了）
题目描述 给定 $n(n \le 10000)$ 和 $k(k \le 100)$，将从 $1$ 到 $n$ 之间的所有正整数可以分为两类：$A$ 类数可以被 $k$ 整除（也就是说是 $k$ 的倍数），而 $B$ 类数不能。请输出这两类数的平均数，精确到小数点后 $1$ 位，用空格隔开。
数据保证两类数的个数都不会是 $0$。
输入格式 无
输出格式 无
输入输出样例 输入 #1
100 16 输出 #1
56.0 50.1 分析 利用了等差数列等高阶数学知识来减少循环次数。
代码（C++） #include&amp;lt;bits/stdc++.h&amp;gt;using namespace std; int main(){ int n,k,can,cant,all,num=0; cin&amp;gt;&amp;gt;n&amp;gt;&amp;gt;k; all=(n+1)*n/2; for(int i=k;i&amp;lt;=n;i+=k){ can+=i; num++; } cant=all-can; double a = (double)can/num; double a_ = (double)cant/(n-num); printf(&amp;#34;%.</description>
    </item>
    
  </channel>
</rss>
